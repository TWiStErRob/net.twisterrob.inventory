name: SVG

on:
  workflow_dispatch:
  push:
    branches:
      - '**' # STOPSHIP main

jobs:

  validate:
    name: "ðŸ¦º Validation"
    uses: TWiStErRob/github-workflows/.github/workflows/validate.yml@v1

  instrumentation:
    name: "ðŸŽ¨ Generate SVGs on" # / API ${{ matrix.api }} will be appended by used workflow.
    needs: validate
    uses: TWiStErRob/github-workflows/.github/workflows/instrumentation.yml@cache
    with:
      android-api: ${{ matrix.api }}
      java-version: 11
      name-artifact-fine-grained: 'SVG {0}'
      name-check-results: 'ðŸ”” Test: SVG Results {0}'
      script-cache: >
        ./.github/workflows/svg/adb-shell-create-sdcard-android-dir.sh ${{ matrix.api }}
      script: >
        ./gradlew
        --no-daemon
        --stacktrace
        :android:data:svg:connectedCheck
        -Pandroid.experimental.androidTest.useUnifiedTestPlatform=true
        -Pandroid.testInstrumentationRunnerArguments.class=net.twisterrob.inventory.android.data.svg.DumpImages

    strategy:
      fail-fast: false
      matrix:
        # The API level, see https://apilevels.com/.
        api:
          - 21
#          - 22
#          - 23
#          - 24
#          - 25
#          - 26
#          - 27
#          - 28
#          - 29
#          - 30
#          - 31
#          - 32
#          - 33
          - 34

  report:
    name: "ðŸ“¢ SVG Report"
    runs-on: ubuntu-22.04
    needs: instrumentation
    # The dependency job might be skipped, we don't need to run this job then.
    if: success() || failure()
    timeout-minutes: 10
    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3

      - name: "Download 'SVG 21' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 21'
          path: 'downloads/SVG 21'

      - name: "Download 'SVG 22' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 22'
          path: 'downloads/SVG 22'

      - name: "Download 'SVG 23' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 23'
          path: 'downloads/SVG 23'

      - name: "Download 'SVG 24' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 24'
          path: 'downloads/SVG 24'

      - name: "Download 'SVG 25' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 25'
          path: 'downloads/SVG 25'

      - name: "Download 'SVG 26' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 26'
          path: 'downloads/SVG 26'

      - name: "Download 'SVG 27' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 27'
          path: 'downloads/SVG 27'

      - name: "Download 'SVG 28' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 28'
          path: 'downloads/SVG 28'

      - name: "Download 'SVG 29' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 29'
          path: 'downloads/SVG 29'

      - name: "Download 'SVG 30' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 30'
          path: 'downloads/SVG 30'

      - name: "Download 'SVG 31' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 31'
          path: 'downloads/SVG 31'

      - name: "Download 'SVG 32' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 32'
          path: 'downloads/SVG 32'

      - name: "Download 'SVG 33' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 33'
          path: 'downloads/SVG 33'

      - name: "Download 'SVG 34' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 34'
          path: 'downloads/SVG 34'

      - name: "Create reporting structure."
        if: success() || failure()
        run: |
          mkdir svg-report
          cd svg-report

          # Gather all input SVGs into a folder.
          mkdir svgs
          cp ${{github.workspace}}/android/data/src/main/res/raw/*.svg ./svgs/
          basename --suffix=.svg -- ./svgs/*.svg > ./svg_names.txt

          # Output all the wanted API levels into a file.
          seq 21 34 > ./api_levels.txt

          # Copy report HTML to this folder.
          cp ${{github.workspace}}/tools/svg_render/svgs.html ./index.html

      - name: "Aggregate svg_*.zip files."
        if: success() || failure()
        working-directory: svg-report
        run: |
          # Get all ZIPs into a folder.
          # Glob resolution is done by shell, so can't use quotes, have to escape spaces and parentheses.
          cp ${{github.workspace}}/downloads/SVG\ ??/outputs/connected_android_test_additional_output/debugAndroidTest/connected/test\(AVD\)\ -\ */svg_??.zip ./
          # At this point we should have svg_??.zip files.

          # Unzip all ZIPs into separate folders.
          for svg_zip in svg_??.zip; do unzip "${svg_zip}" -d "${svg_zip%.zip}"; done
          # At this point we should have svg_??/*.png files.

      - name: "Upload 'SVG Report' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: 'SVG Report'
          path: |
            svg-report/
            !svg-report/svg_??.zip
