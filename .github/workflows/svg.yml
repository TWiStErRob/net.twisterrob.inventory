name: SVG
on:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:

  validate:
    name: "ðŸ¦º Validation"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    permissions:
      # actions/checkout
      contents: read
    steps:
      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: "Validate Gradle Wrapper JARs."
        uses: gradle/wrapper-validation-action@v1


  instrumentation:
    name: "ðŸŽ¨ Generate SVGs on ${{ matrix.android-api }}"
    needs: validate
    runs-on: macos-latest
    timeout-minutes: 30
    permissions:
      # actions/checkout
      contents: read
      # EnricoMi/publish-unit-test-result-action -> https://github.com/EnricoMi/publish-unit-test-result-action#permissions
      checks: write
    strategy:
      fail-fast: false
      matrix:
        # The Android SDK API level (number), see https://apilevels.com/.
        android-api:
          - 21
#          - 22
#          - 23
#          - 24
#          - 25
#          - 26
#          - 27
#          - 28
#          - 29
#          - 30
#          - 31
#          - 32
          - 33
          - 34
    steps:
      - name: "Set up JDK 11."
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: "Set up Gradle caching"
        uses: gradle/gradle-build-action@v2

      - name: "Load AVD cache"
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-api${{ matrix.android-api }}@v1

      - name: "Create AVD and generate snapshot for caching"
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android-api }}
          # TODEL Some are not available: https://issuetracker.google.com/issues/267458959
          target: ${{ matrix.android-api >= 32 && 'google_apis' || 'default' }}
          arch: ${{ matrix.android-api >= 21 && 'x86_64' || 'x86' }}
          profile: pixel
          # Ensure that /storage/sdcard exists, without this the stock DocumentsUI will be non-functional.
          sdcard-path-or-size: 100M
          emulator-boot-timeout: 900 # 15 minutes
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          force-avd-creation: true # There was a cache miss, be strict now.
          script: |
            adb devices -l
            # Initial setup, gets cached.
            ./.github/workflows/svg/adb-shell-create-sdcard-android-dir.sh ${{ matrix.android-api }}

      - name: "Run SVG generation on emulator."
        uses: reactivecircus/android-emulator-runner@v2
        with:
          force-avd-creation: false # Reuse pre-created emulator.
          api-level: ${{ matrix.android-api }}
          # TODEL Some are not available: https://issuetracker.google.com/issues/267458959
          target: ${{ matrix.android-api >= 32 && 'google_apis' || 'default' }}
          arch: ${{ matrix.android-api >= 21 && 'x86_64' || 'x86' }}
          profile: pixel
          # Ensure that /storage/sdcard exists, without this the stock DocumentsUI will be non-functional.
          sdcard-path-or-size: 100M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot-save
          script: |
            adb devices -l
            ./gradlew --no-daemon --stacktrace :android:data:svg:connectedCheck -Pandroid.experimental.androidTest.useUnifiedTestPlatform=true -Pandroid.testInstrumentationRunnerArguments.class=net.twisterrob.inventory.android.data.svg.DumpImages

      - name: "Upload 'SVG ${{ matrix.android-api }}' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: 'SVG ${{ matrix.android-api }}'
          path: |
            android/data/svg/build/reports/androidTests/connected/
            android/data/svg/build/outputs/androidTest-results/connected/
            android/data/svg/build/outputs/connected_android_test_additional_output/

      - name: "Publish 'SVG Results ${{ matrix.android-api }}' check suite."
        if: success() || failure()
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          check_name: 'ðŸ”” Test: SVG Results ${{ matrix.android-api }}'
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: android/data/svg/build/outputs/androidTest-results/connected/TEST-*.xml

  report:
    name: "ðŸ“¢ SVG Report"
    runs-on: ubuntu-22.04
    needs: instrumentation
    # The dependency job might be skipped, we don't need to run this job then.
    if: success() || failure()
    timeout-minutes: 10
    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3

      - name: "Download 'SVG 21' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 21'
          path: 'downloads/SVG 21'

      - name: "Download 'SVG 22' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 22'
          path: 'downloads/SVG 22'

      - name: "Download 'SVG 23' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 23'
          path: 'downloads/SVG 23'

      - name: "Download 'SVG 24' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 24'
          path: 'downloads/SVG 24'

      - name: "Download 'SVG 25' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 25'
          path: 'downloads/SVG 25'

      - name: "Download 'SVG 26' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 26'
          path: 'downloads/SVG 26'

      - name: "Download 'SVG 27' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 27'
          path: 'downloads/SVG 27'

      - name: "Download 'SVG 28' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 28'
          path: 'downloads/SVG 28'

      - name: "Download 'SVG 29' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 29'
          path: 'downloads/SVG 29'

      - name: "Download 'SVG 30' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 30'
          path: 'downloads/SVG 30'

      - name: "Download 'SVG 31' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 31'
          path: 'downloads/SVG 31'

      - name: "Download 'SVG 32' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 32'
          path: 'downloads/SVG 32'

      - name: "Download 'SVG 33' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 33'
          path: 'downloads/SVG 33'

      - name: "Download 'SVG 34' artifact."
        if: success() || failure()
        uses: actions/download-artifact@v3
        with:
          name: 'SVG 34'
          path: 'downloads/SVG 34'

      - name: "Create reporting structure."
        if: success() || failure()
        run: |
          mkdir svg-report
          cd svg-report

          # Gather all input SVGs into a folder.
          mkdir svgs
          cp ${{github.workspace}}/android/data/src/main/res/raw/*.svg ./svgs/
          basename --suffix=.svg -- ./svgs/*.svg > ./svg_names.txt

          # Output all the wanted API levels into a file.
          seq 21 34 > ./api_levels.txt

          # Copy report HTML to this folder.
          cp ${{github.workspace}}/tools/svg_render/svgs.html ./index.html

      - name: "Aggregate svg_*.zip files."
        if: success() || failure()
        working-directory: svg-report
        run: |
          # Get all ZIPs into a folder.
          # Glob resolution is done by shell, so can't use quotes, have to escape spaces and parentheses.
          cp ${{github.workspace}}/downloads/SVG\ ??/outputs/connected_android_test_additional_output/debugAndroidTest/connected/test\(AVD\)\ -\ */svg_??.zip ./
          # At this point we should have svg_??.zip files.

          # Unzip all ZIPs into separate folders.
          for svg_zip in svg_??.zip; do unzip "${svg_zip}" -d "${svg_zip%.zip}"; done
          # At this point we should have svg_??/*.png files.

      - name: "Upload 'SVG Report' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: 'SVG Report'
          path: |
            svg-report/
            !svg-report/svg_??.zip
