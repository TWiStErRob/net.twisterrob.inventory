plugins {
	id("net.twisterrob.inventory.android.app")
}

dependencies {
	implementation("net.twisterrob.lib:twister-lib-android-basics")
	implementation(project(":android:data"))
	implementation("net.twisterrob.lib:twister-lib-android-glide4")
	implementation("net.twisterrob.lib:twister-lib-java")
	implementation(libs.androidsvg)
	implementation(libs.slf4j.api)
}

dependencies {
	androidTestImplementation("net.twisterrob.lib:twister-lib-android-espresso")
	androidTestImplementation(libs.androidx.preference)
	androidTestRuntimeOnly("net.twisterrob.lib:twister-lib-android-slf4j")
	kspAndroidTest(libs.glide.ksp)
}

android {
	defaultConfig {
		applicationId "net.twisterrob.inventory.data"
		version {
			major = 1
		}
		testInstrumentationRunner = "net.twisterrob.android.test.junit.AndroidJUnitRunner"
	}
	buildTypes {
		debug {
			multiDexKeepProguard = project(":android").file("src/androidTest/multidex.pro")
		}
	}
	testOptions {
		managedDevices {
			def apiDevices = (29..33).collect {api ->
				devices.register("api${api}", com.android.build.api.dsl.ManagedVirtualDevice) {
					device = "Pixel 2"
					apiLevel = api
					require64Bit = true
					// https://issuetracker.google.com/issues/267458959
					systemImageSource = api == 32 || api == 33 ? "google_apis" : "default"
				}
			}
			groups.register("gmd") { group ->
				apiDevices.each { device ->
					group.targetDevices.addLater(device)
				}
			}
		}
	}
}

androidComponents {
	beforeVariants(selector().withName("release"), { it.enable = false })
	beforeVariants(selector().all(), { it.enableUnitTest = false })
}
