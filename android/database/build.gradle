import kotlin.collections.CollectionsKt

plugins {
	id("net.twisterrob.inventory.android.module")
	id("net.twisterrob.inventory.database")
}

dependencies {
	api project(':android:database-contract')
	implementation project(':android:base')
	implementation project(':android:preferences')

	implementation "net.twisterrob.lib:twister-lib-android-monolith"
	implementation "net.twisterrob.lib:twister-lib-android-basics"
	implementation "net.twisterrob.lib:twister-lib-android-settings"
	implementation "net.twisterrob.lib:twister-lib-core"
	implementation "net.twisterrob.lib:twister-lib-java"
	implementation("net.twisterrob.lib:twister-lib-general")
	implementation(libs.androidx.preference)

	testImplementation project(':android:test_helpers')
	testImplementation(project(":android:database:sqlite3"))
}

databaseEntities {
	categories {
		//noinspection UnnecessaryQualifiedReference,GrDeprecatedAPIUsage REPORT cannot replace with new interface, missing methods
		com.android.build.gradle.api.AndroidSourceSet data_ss = evaluationDependsOn(':android:data').android.sourceSets.main
		input.set(file(new File(data_ss.res.srcDirs.first(), 'values/strings_Categories.xml')))
		assetPath.set("MagicHomeInventory.data.Categories.sql")
		iconFolder.set(file(new File(data_ss.res.srcDirs.first(), 'raw')))
		conversion.set("SQL")
	}
}
android.libraryVariants.all { com.android.build.gradle.api.LibraryVariant variant ->
	variant.mergeAssetsProvider.configure { it.dependsOn(tasks.generateDataBase) }
}

// See net.twisterrob.inventory.android.content.Database.
android.buildFeatures.buildConfig = true

android.testOptions.unitTests.all { Test test ->
	test.systemProperty(
			"net.twisterrob.inventory.database.mainFolder",
			CollectionsKt.single(android.sourceSets.main.assets.srcDirs)
	)
	test.systemProperty(
			"net.twisterrob.inventory.database.debugFolder",
			CollectionsKt.single(android.sourceSets.debug.assets.srcDirs)
	)
	test.systemProperty(
			"net.twisterrob.inventory.database.androidSdk",
			androidComponents.sdkComponents.sdkDirectory.get().asFile
	)
}
