if (project.hasProperty('libFromSources')) {
	evaluationDependsOn ':twister-lib-java'
	evaluationDependsOn ':twister-lib-android'
	evaluationDependsOn ':twister-lib-android-slf4j'
}

apply plugin: 'com.android.application'
apply plugin: 'net.twisterrob.android-app'
apply from: new File(rootDir, 'gradle/mapping.gradle')

apply plugin: InventoryDatabasePlugin

databaseEntities {
	categories {
		def ss = android.sourceSets.main
		input = file(new File(ss.res.srcDirs.first(), 'values/strings_Categories.xml'))
		output = file(new File(ss.assets.srcDirs.first(), 'MagicHomeInventory.data.Categories.sql'))
		iconFolder = file(new File(ss.res.srcDirs.first(), 'raw'))
		conversion = "SQL"
	}
}
android.applicationVariants.all { com.android.build.gradle.api.ApplicationVariant variant ->
	variant.mergeAssets.dependsOn tasks.generateDataBase
}

dependencies {
	//configurations.compile.resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // -SNAPSHOT
	if (project.hasProperty('libFromSources')) {
		compile project(':twister-lib-java')
		compile project(':twister-lib-android')
		apk project(path: ':twister-lib-android-slf4j', configuration: 'jar')
	} else {
		compile('net.twisterrob:twister-lib-android:1.0-SNAPSHOT')
		compile('net.twisterrob:twister-lib-java:1.0-SNAPSHOT')
		apk('net.twisterrob:twister-lib-android-slf4j:1.0-SNAPSHOT')
	}

	// TOFIX otherwise VariantFragment descendants don't see Fragment and its methods (Cannot access FQCN errors in IDEA)
	compile "com.android.support:support-v4:${VERSION_SUPPORT}"
	compile "com.android.support:appcompat-v7:${VERSION_SUPPORT}"
	compile "com.android.support:design:${VERSION_SUPPORT}"
//	compile "com.android.support:cardview-v7:${VERSION_SUPPORT}"
	compile "com.android.support:recyclerview-v7:${VERSION_SUPPORT}"
	compile 'com.google.android:flexbox:0.2.3'

	// Class.forName("org.apache.xml.serializer.Version").getDeclaredMethod("main", String[].class)
	// .invoke(null, new Object[] { new String[0] }); // shows Serializer Java 2.7.1 on Genymotion 2.3.7 and S5 5.0.0
//	provided "xalan:xalan:2.7.1"

//	debugCompile 'com.facebook.stetho:stetho:1.3.1'
//	debugCompile 'com.facebook.stetho:stetho-js-rhino:1.3.1'
//	debugCompile 'com.idescout.sql:sqlscout-server:1.0'

	apply from: "${rootDir}/gradle/testCompile.gradle", to: project
}

android {
	defaultConfig {
		applicationId 'net.twisterrob.inventory'
		version {
			versionFile = null
			major = 1
			minor = 1
			patch = 1
		}
		resConfigs "en_GB", "en_NZ", "en_AU" //, "hu"
		testInstrumentationRunner 'net.twisterrob.android.test.junit.AndroidJUnitRunner'
	}
	lintOptions {
		//abortOnError false
	}
	testBuildType "debug" // CONSIDER release
	buildTypes {
		release {
			//debuggable true
			shrinkResources true // http://tools.android.com/tech-docs/new-build-system/resource-shrinking
		}
		debug {
			//minifyEnabled true
		}
	}
	aaptOptions {
		noCompress 'svg' // Resources.openRawResourceFd can only open AssetFileDescriptor for uncompressed resources
		def defaultIgnoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~'
		ignoreAssetsPattern defaultIgnoreAssetsPattern + ':!descript.ion:!*.yuml:!*.yuml.png'
	}
	sourceSets.main.res.srcDir 'src/main/res-icons'
	sourceSets.test.java.srcDir 'src/test/robolectricJava'

	packagingOptions {
		/* Execution failed for task ':transformResourcesWithMergeJavaResForDebugAndroidTest'.
			> com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException:
			Duplicate files copied in APK META-INF/maven/com.google.guava/guava/pom.xml
			File1: I:\build\intermediates\exploded-aar\com.android.support.test.espresso\espresso-web\2.2.2\jars\classes.jar
			File2: I:\build\intermediates\exploded-aar\com.android.support.test.espresso\espresso-core\2.2.2\jars\classes.jar
		 */
		exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
		exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
	}
}
android.testVariants.all { com.android.build.gradle.api.TestVariant test ->
	def grantPermissions = project.task(type: Exec, "grant${test.name.capitalize()}Permissions") {
		enabled = false // TOFIX figure out a way to run this at the correct time
		mustRunAfter test.install // not dependsOn, because that wouldn't allow running the task by itself
		def permission = 'android.permission.SET_ANIMATION_SCALE';
		commandLine "adb shell pm grant ${test./*testedVariant.*/ applicationId} ${permission}".split(' ')
	}
	test.connectedInstrumentTest.dependsOn grantPermissions
}

apply from: "${rootDir}/gradle/upgradeTest.gradle"

task generateHtmlReportFromXml(type: net.twisterrob.gradle.android.tasks.TestReportGenerator) {
	input = new File(rootDir, 'temp/tests')
	output = new File(rootDir, 'temp/tests_results')
	outputs.upToDateWhen { false }
}
