plugins {
	id("net.twisterrob.inventory.android.app")
	id("net.twisterrob.inventory.mapping")
	id("net.twisterrob.inventory.upgradeTest")
	id("net.twisterrob.inventory.build.tests.instrumentation")
}

dependencies {
	implementation project(':android:base')
	implementation project(':android:database')
	implementation project(':android:backup')
	implementation project(':android:preferences')
	implementation project(':android:space')
	// REPORT Glide transitive libs are not used in GeneratedAppGlideModuleImpl
	implementation project(':android:data')
	implementation('net.twisterrob.lib:twister-lib-android-monolith')
	implementation "net.twisterrob.lib:twister-lib-android-glide4"
	implementation('net.twisterrob.lib:twister-lib-general')
	implementation 'net.twisterrob.lib:twister-lib-android-basics'
	implementation 'net.twisterrob.lib:twister-lib-android-widgets'
	implementation 'net.twisterrob.lib:twister-lib-android-settings'
	implementation 'net.twisterrob.lib:twister-lib-android-about'
	implementation 'net.twisterrob.lib:twister-lib-android-logging'
	implementation 'net.twisterrob.lib:twister-lib-android-stringers'
	implementation 'net.twisterrob.lib:twister-lib-android-capture_image'
	runtimeOnly('net.twisterrob.lib:twister-lib-android-slf4j')
	// Replace APK's runtimeOnly sneaking into test runtime
	configurations.testRuntimeOnly.exclude module: 'twister-lib-android-slf4j'

	implementation(libs.androidx.localbroadcastmanager)
	implementation(libs.androidx.appcompat)
	implementation(libs.androidx.material)
	implementation(libs.androidx.recyclerview)
	implementation(libs.androidx.swiperefreshlayout)
	implementation(libs.androidx.webkit)
	implementation(libs.slf4j.api)
	ksp(libs.glide.ksp)

	// Class.forName("org.apache.xml.serializer.Version").getDeclaredMethod("main", String[].class)
	// .invoke(null, new Object[] { new String[0] }); // shows "Serializer Java 2.7.1" on Genymotion 2.3.7 and S5 5.0.0
//	compileOnly(libs.xalan)

//	debugImplementation 'com.facebook.stetho:stetho:1.3.1'
//	debugImplementation 'com.facebook.stetho:stetho-js-rhino:1.3.1'
//	debugImplementation 'com.idescout.sql:sqlscout-server:1.0'

	testImplementation project(':android:test_helpers')
	testImplementation(libs.test.junit4)
	testImplementation 'net.twisterrob.lib:twister-lib-hamcrest'
	testImplementation 'net.twisterrob.lib:twister-lib-mockito'
	testImplementation(libs.test.robolectric)
	testImplementation(libs.androidx.test.core)
	testRuntimeOnly(libs.slf4j.simple)

	androidTestImplementation "net.twisterrob.lib:twister-lib-hamcrest"
	androidTestImplementation "net.twisterrob.lib:twister-lib-mockito"
	androidTestImplementation(libs.test.mockitoAndroid)
	androidTestImplementation "net.twisterrob.lib:twister-lib-test"
	androidTestImplementation "net.twisterrob.lib:twister-lib-junit4"
	androidTestImplementation(libs.test.hamcrestJunit)

	androidTestImplementation "net.twisterrob.lib:twister-lib-android-espresso"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-espresso_actors"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-espresso_glide4"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-cpsuite"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-uiautomator"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-about-test_helpers"
	androidTestImplementation "net.twisterrob.lib:twister-lib-android-capture_image-test_helpers"
	androidTestImplementation project(':android:database:test_helpers')
	androidTestImplementation(libs.androidx.preference)
	androidTestImplementation(libs.androidx.test.espressoIntents)
	androidTestImplementation(libs.androidx.test.espressoContrib)
}

android {
	defaultConfig {
		targetSdk = 33
		applicationId 'net.twisterrob.inventory'
		version {
			major = 1
			minor = 2
			patch = 0
		}
		resConfigs "en_GB", "en_NZ", "en_AU" //, "hu"
		testInstrumentationRunner = "net.twisterrob.inventory.android.InventoryJUnitRunner"
	}
	buildFeatures {
		buildConfig = true
	}
	lint {
		checkAllWarnings = true
		checkDependencies = true
		// REPORT https://issuetracker.google.com/issues/233912817 is fixed, but still repros.
		disable.add("UnusedIds")
	}
	testOptions.unitTests.includeAndroidResources = true // Robolectric
	testBuildType = "debug" // CONSIDER release
	buildTypes {
		release {
			//debuggable = true
			shrinkResources = true // http://tools.android.com/tech-docs/new-build-system/resource-shrinking
		}
		debug {
			//minifyEnabled = true
			multiDexKeepProguard = file('src/androidTest/multidex.pro')
		}
	}
	androidResources {
		noCompress.add("svg") // Resources.openRawResourceFd can only open AssetFileDescriptor for uncompressed resources
		def defaultIgnoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~'
		ignoreAssetsPattern = defaultIgnoreAssetsPattern + ':!descript.ion:!*.yuml:!*.yuml.png'
	}
	sourceSets.test.java.srcDir("src/test/robolectricJava")
}

//noinspection UnnecessaryQualifiedReference
tasks.register("generateHtmlReportFromXml", net.twisterrob.gradle.android.tasks.TestReportGenerator.class) {
	input = new File(rootDir, 'temp/tests')
	output = new File(rootDir, 'temp/tests_results')
	outputs.upToDateWhen { false }
}

dependencies.components {
	withModule("io.takari.junit:takari-cpsuite") {
		withVariant("runtime") { variant ->
			def field = org.gradle.api.internal.artifacts.repositories.resolver.VariantMetadataAdapter.class.getDeclaredField("metadata")
			field.setAccessible(true)
			def metadata = field.get(variant) as org.gradle.internal.component.external.model.maven.DefaultMutableMavenModuleResolveMetadata
			metadata.setPackaging("jar")
		}
	}
}

tasks.withType(Test).configureEach {
	if (javaVersion.isCompatibleWith(JavaVersion.VERSION_1_9)) { // 9 <= Java
		jvmArgs(
				// TODEL https://github.com/x-stream/xstream/issues/101#issuecomment-1465270756
				"--add-opens=java.base/java.lang=ALL-UNNAMED",
				"--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
				"--add-opens=java.base/java.util=ALL-UNNAMED",
				"--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
				"--add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED",
				"--add-opens=java.base/java.text=ALL-UNNAMED",
				"--add-opens=java.desktop/java.awt.font=ALL-UNNAMED",
		)
	}
}

// CONSIDER a rewrite of plugin "android-reporting" (see Color Filters repo)
def copyAndroidTestResults = tasks.register("copyAndroidTestResults", Sync) {
	// No SingleArtifact/InternalArtifactType in AGP 8.1 for androidTest results/reports, so hardcode.
	from(layout.buildDirectory.dir("reports/androidTests/connected/debug"))
	from(layout.buildDirectory.dir("outputs/androidTest-results/connected/debug"))
	into(rootProject.layout.buildDirectory.dir("androidTest-results"))
}
afterEvaluate {
	tasks.named("connectedDebugAndroidTest").configure {
		finalizedBy(copyAndroidTestResults)
	}
}
