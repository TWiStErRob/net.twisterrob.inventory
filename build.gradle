if (project.hasProperty('libFromSources')) {
	evaluationDependsOn ':twister-lib-java'
	evaluationDependsOn ':twister-lib-android'
}

buildscript {
	apply from: 'gradle/buildscript.gradle', to: buildscript
}

apply plugin: 'com.android.application'
apply plugin: 'net.twisterrob.android-app'
apply from: 'gradle/mapping.gradle'

apply plugin: InventoryDatabasePlugin

databaseEntities {
	categories {
		input = file(/i:\src\main\res\values\strings_Categories.xml/)
		output = file(/i:\src\main\assets\MagicHomeInventory.data.Categories.sql/)
		conversion = "SQL"
	}
}
android.applicationVariants.all { com.android.build.gradle.api.ApplicationVariant  variant ->
	variant.mergeAssets.dependsOn tasks.generateDataBase
}

repositories {
	jcenter()
	maven { name 'twisterrob'; url 'http://localhost/maven' }
	maven { name 'glide'; url 'http://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	//configurations.compile.resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // -SNAPSHOT
	if (project.hasProperty('libFromSources')) {
		compile project(':twister-lib-java')
		compile project(':twister-lib-android')
	} else {
		compile('net.twisterrob:twister-lib-android:1.0-SNAPSHOT')
		compile('net.twisterrob:twister-lib-java:1.0-SNAPSHOT')
	}
	// TODO otherwise VariantFragment descendants don't see Fragment and its methods
	def supportVersion = '23.2.0'
	compile "com.android.support:support-v4:${supportVersion}"
	compile "com.android.support:appcompat-v7:${supportVersion}"
//	compile "com.android.support:cardview-v7:${supportVersion}"
//	compile "com.android.support:recyclerview-v7:${supportVersion}"
}

android {
	defaultConfig {
		applicationId 'net.twisterrob.inventory'
		version {
			major = 1
		}
		resConfigs "en_GB", "en_NZ", "en_AU" //, "hu"
	}
	buildTypes {
		release {
			//debuggable true
			shrinkResources true // http://tools.android.com/tech-docs/new-build-system/resource-shrinking
		}
		debug {
			//minifyEnabled true
		}
	}
	aaptOptions {
		noCompress 'svg' // Resources.openRawResourceFd can only open AssetFileDescriptor for uncompressed resources
		def defaultIgnoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~'
		ignoreAssetsPattern defaultIgnoreAssetsPattern + ':!descript.ion:!*.yuml:!*.yuml.png'
	}
	sourceSets.main.res.srcDir 'src/main/res-icons'
}
