import static net.twisterrob.gradle.GradleUtils.doNotNagAbout

plugins {
	id("net.twisterrob.inventory.root")
}

tasks.register("clean", Delete.class) { clean ->
	clean.dependsOn(gradle.includedBuilds*.task(":cleanFull"))
	clean.delete(project.buildDir)
}

tasks.register("build") { build ->
	build.dependsOn(gradle.includedBuilds*.task(":build"))
}

idea {
	module {
		excludeDirs += [
				// local untracked folder for junk
				rootProject.file("temp"),
				// generated by mergeAndroidReports
				new File(rootProject.buildDir, "androidTest-results"),
				new File(rootProject.buildDir, "reports/androidTests")
		]
	}
}

// run `gradlew releaseCheck -x check -x connectedCheck` to just get the output of this
// CONSIDER deprecate this against `gradlew connectedCheck --continue mergeAndroidReports` from 'android-reporting' 
tasks.register("releaseCheck") {
	dependsOn(getTasksByName("check", true))
	dependsOn(":android:connectedCheck")
	doLast {
		def report = { task, type, loc ->
			if (file(loc).exists()) {
				println "${task.path} ${type}: ${loc}"
			}
		}
		println("================ Report Locations ================")
		/* TODO AGP 2.x to 3.x breaking changes
		getTasksByName('lint', true).each {
			new LintHelper(it).print(report)
		}
		*/
		getAllTasks(true)
				.collectMany { it.value }
				.findAll { it instanceof Test }
				.each { Test task -> report(task, "test", task.reports.html.entryPoint) }
	}
}
/* TODO AGP 2.x to 3.x breaking changes 
//apply plugin: 'android-reporting'
//when accessing project.android to set compileSdkVerison,
//may need to exclude this android.class.simpleName != "TestOptions_Decorated"
    
import com.android.build.gradle.internal.dsl.LintOptions
import com.android.build.gradle.tasks.Lint

class LintHelper {
	Lint task
	LintHelper(Task task) {
		this.task = (Lint)task
	}
	private static lintField(Object task, String name) {
		def field = Lint.class.getDeclaredField(name)
		field.accessible = true
		return field.get(task)
	}
	def output(ext) {
		def fatal = lintField(task, 'mFatalOnly') as boolean
		File out
		out = LintOptions.createOutputPath(task.project, 'release', ".${ext}", fatal)
		if (out.exists()) {
			return out
		}
		out = LintOptions.createOutputPath(task.project, 'debug', ".${ext}", fatal)
		if (out.exists()) {
			return out
		}
		return LintOptions.createOutputPath(task.project, task.variantName, ".${ext}", fatal)
	}
	def print(reporter) {
		def lint = lintField(task, 'mLintOptions') as com.android.builder.model.LintOptions
		if (lint.textReport) {
			reporter(task, 'text', lint.textOutput ?: output('txt'))
		}
		if (lint.htmlReport) {
			reporter(task, 'html', lint.htmlOutput ?: output('html'))
		}
		if (lint.xmlReport) {
			reporter(task, 'xml', lint.xmlOutput ?: output('xml'))
		}
	}
}
*/

def gradleVersion = GradleVersion.current().version

// TODEL Gradle sync in AS EE 2022.1.1 https://youtrack.jetbrains.com/issue/IDEA-301430, fixed in AS Giraffe.
if (System.getProperty("idea.version") ?: "" < "2022.3") {
	doNotNagAbout(
			"The org.gradle.util.GUtil type has been deprecated. " +
					"This is scheduled to be removed in Gradle 9.0. " +
					"Consult the upgrading guide for further information: " +
					"https://docs.gradle.org/${gradleVersion}/userguide/upgrading_version_7.html#org_gradle_util_reports_deprecations",
			//"at org.jetbrains.plugins.gradle.tooling.builder.ExternalProjectBuilderImpl\$_getSourceSets_closure"
	)
} else {
	error("Android Studio version changed, please remove hack.")
}

// TODEL Gradle sync in AS EE 2022.1.1 https://youtrack.jetbrains.com/issue/IDEA-284158
if (System.getProperty("idea.version") ?: "" < "2023.2") {
	doNotNagAbout(
			"Resolution of the configuration :tools:transform:detachedConfiguration1 " +
					"was attempted from a context different than the project context. " +
					"Have a look at the documentation to understand why this is a problem and how it can be resolved. " +
					"This behaviour has been deprecated and is scheduled to be removed in Gradle 8.0. " +
					"See https://docs.gradle.org/${gradleVersion}/userguide/viewing_debugging_dependencies.html#sub:resolving-unsafe-configuration-resolution-errors for more details.",
			//	at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:618)
	)
} else {
	error("Android Studio version changed, please review hack.")
}
