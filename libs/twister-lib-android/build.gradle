buildscript {
	apply from: rootProject.file("gradle/repos.gradle"), to: buildscript
	dependencies {
		//configurations.classpath.resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // -SNAPSHOT
		classpath "net.twisterrob.gradle:plugin:${VERSION_TWISTER_GRADLE}"
	}
}

group = 'net.twisterrob.lib'
version = '1.0'

apply plugin: 'com.android.library'
apply plugin: 'net.twisterrob.android-library'
apply from: 'http://localhost/maven/configure.gradle'

repositories {
	jcenter()
	maven { name = 'twisterrob'; url = 'http://localhost/maven' }
}

dependencies {
	//configurations.implementation.resolutionStrategy.cacheChangingModulesFor 0, 'seconds' // -SNAPSHOT
	implementation 'net.twisterrob.lib:twister-libs-java:1.0-SNAPSHOT'
	implementation 'net.twisterrob.lib:twister-lib-android-defs'
	implementation 'net.twisterrob.lib:twister-lib-android-logging'
	implementation 'net.twisterrob.lib:twister-lib-android-basics'
	implementation 'net.twisterrob.lib:twister-lib-android-stringers'
	//noinspection GradleCompatible exifinterface is newer than all the other ones, and quite independent
	implementation "com.android.support:support-v4:${VERSION_SUPPORT}"
	implementation "com.android.support:appcompat-v7:${VERSION_SUPPORT}"
	implementation "com.android.support:cardview-v7:${VERSION_SUPPORT}"
	implementation "com.android.support:recyclerview-v7:${VERSION_SUPPORT}"
	implementation "com.android.support:design:${VERSION_SUPPORT}"
	//implementation "com.android.support:palette-v7:${VERSION_SUPPORT}"

	// FIXME @Deprecated, use Glide
	implementation 'com.jakewharton:disklrucache:2.0.2'
	implementation 'com.rarepebble:colorpicker:1.7.0'

	apply from: "${rootDir}/gradle/testCompile.gradle", to: project
}

android {
	defaultConfig {
		minSdkVersion 10
		multiDexEnabled = true
	}
	lintOptions {
		checkAllWarnings = true
		checkDependencies = true
	}
	testOptions {
		unitTests.returnDefaultValues = true
	}
}

afterEvaluate {
	allprojects { project ->
		com.android.build.gradle.api.AndroidSourceSet androidTest = project.android.sourceSets.androidTest
		if (androidTest.java.sourceFiles.empty) {
			logger.info "Disabling AndroidTest tasks in ${project.path} as it has no sources in ${androidTest.java.srcDirs}"
			project.tasks.whenTaskAdded { task ->
				if (task.name.contains("AndroidTest")) {
					task.enabled = false
				}
			}
		}
	}
}

task cleanFull {
	dependsOn allprojects*.tasks*.findByPath('clean')
}
