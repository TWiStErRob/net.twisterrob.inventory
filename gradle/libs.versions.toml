[versions]
#java = "1.8"
#
agp = "7.4.2"
# 23.0.0 + agp
agp-tools = "30.4.2"
## https://github.com/TWiStErRob/net.twisterrob.gradle/releases
twisterrob = "0.15.1"
detekt = "1.22.0"
kotlin = "1.8.10"

# TODEL NewerVersionAvailable lint exception
glide = "3.8.0"
androidsvg = "1.4"
flexbox = "2.0.1"
slf4j = "1.7.30"

# https://developer.android.com/jetpack/androidx/releases/annotation
androidx-annotation = "1.6.0"
# https://developer.android.com/jetpack/androidx/releases/fragment
androidx-fragment = "1.5.5"
# https://developer.android.com/jetpack/androidx/releases/appcompat
androidx-appcompat = "1.6.1"
# https://developer.android.com/jetpack/androidx/releases/core
androidx-core = "1.9.0"
# https://developer.android.com/jetpack/androidx/releases/localbroadcastmanager
androidx-broadcast = "1.1.0"
# https://developer.android.com/jetpack/androidx/releases/multidex
androidx-multidex = "2.0.1"
# https://developer.android.com/jetpack/androidx/releases/exifinterface
androidx-exif = "1.3.6"
# https://developer.android.com/jetpack/androidx/releases/loader
androidx-loader = "1.1.0"
# https://developer.android.com/jetpack/androidx/releases/recyclerview
androidx-recyclerview = "1.3.0"
# https://developer.android.com/jetpack/androidx/releases/cardview
androidx-cardview = "1.0.0"
# https://developer.android.com/jetpack/androidx/releases/drawerlayout
androidx-drawerlayout = "1.1.1"
# https://developer.android.com/jetpack/androidx/releases/swiperefreshlayout
androidx-swiperefreshlayout = "1.1.0"
# https://developer.android.com/jetpack/androidx/releases/preference
androidx-preference = "1.2.0"
# https://github.com/material-components/material-components-android/releases
androidx-material = "1.8.0"

xalan = "2.7.1"
saxon = "9.7.0-7"
javaxInject = "1"
guava = "27.0.1-jre"
jbrAnn = "18.0.0"

test-junit4 = "4.13.1"
# TODEL NewerVersionAvailable lint exception
test-mockito = "3.10.0"
test-powermock = "2.0.7"
# https://developer.android.com/jetpack/androidx/releases/test
test-androidxJunit = "1.1.5"
test-androidxCore = "1.5.0"
test-espresso = "3.5.1"
test-robolectric = "4.9.2"
# Use this instead of 1.3
# If `hamcrest-1.3` appears in the dependency list, check if it's excluded from all usages.
test-hamcrest = "2.0.0.0"
test-gwen = "1.0.2"
test-durian = "3.4.0"
test-fishbowl = "1.4.1"

[libraries]
plugin-android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-android-tools-common = { module = "com.android.tools:common", version.ref = "agp-tools" }
plugin-android-tools-sdkCommon = { module = "com.android.tools:sdk-common", version.ref = "agp-tools" }
plugin-android-tools-ddmlib = { module = "com.android.tools.ddms:ddmlib", version.ref = "agp-tools" }
plugin-android-tools-testApi = { module = "com.android.tools.build:builder-test-api", version.ref = "agp" }
plugin-twisterrob-quality = { module = "net.twisterrob.gradle:twister-quality", version.ref = "twisterrob" }
plugin-twisterrob-android = { module = "net.twisterrob.gradle:twister-convention-plugins", version.ref = "twisterrob" }

kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }

androidsvg = { module = "com.caverock:androidsvg", version.ref = "androidsvg" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
flexbox = { module = "com.google.android:flexbox", version.ref = "flexbox" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
annotations-jetbrains = { module = "org.jetbrains:annotations", version.ref = "jbrAnn" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-broadcast = { module = "androidx.localbroadcastmanager:localbroadcastmanager", version.ref = "androidx-broadcast" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }
androidx-exif = { module = "androidx.exifinterface:exifinterface", version.ref = "androidx-exif" }
androidx-loader = { module = "androidx.loader:loader", version.ref = "androidx-loader" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidx-cardview" }
androidx-drawerlayout = { module = "androidx.drawerlayout:drawerlayout", version.ref = "androidx-drawerlayout" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidx-swiperefreshlayout" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "androidx-preference" }
androidx-material = { module = "com.google.android.material:material", version.ref = "androidx-material" }

javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
xml-xalan = { module = "xalan:xalan", version.ref = "xalan" }
xml-saxon = { module = "net.sf.saxon:Saxon-HE", version.ref = "saxon" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

test-junit4 = { module = "junit:junit", version.ref = "test-junit4" }
test-hamcrest = { module = "org.hamcrest:java-hamcrest", version.ref = "test-hamcrest" }
test-hamcrestJunit = { module = "org.hamcrest:hamcrest-junit", version.ref = "test-hamcrest" }
test-mockito = { module = "org.mockito:mockito-core", version.ref = "test-mockito" }
test-mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "test-mockito" }
test-powermockMockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "test-powermock" }
test-powermockJunit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "test-powermock" }
test-powermockJunit4Rule = { module = "org.powermock:powermock-module-junit4-rule", version.ref = "test-powermock" }
test-powermockXstream = { module = "org.powermock:powermock-classloading-xstream", version.ref = "test-powermock" }
test-androidxJunit = { module = "androidx.test.ext:junit", version.ref = "test-androidxJunit" }
test-androidxCore = { module = "androidx.test:core", version.ref = "test-androidxCore" }
test-espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "test-espresso" }
test-espressoContrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "test-espresso" }
test-robolectric = { module = "org.robolectric:robolectric", version.ref = "test-robolectric" }
test-robolectricMultidexShadows = { module = "org.robolectric:shadows-multidex", version.ref = "test-robolectric" }
# Gwen.given, Gwen.when, Gwen.then
test-gwen = { module = "com.shazam:gwen", version.ref = "test-gwen" }
test-durian = { module = "com.diffplug.durian:durian", version.ref = "test-durian" }
# exceptionThrownBy (assertThrows-like)
test-fishbowl = { module = "com.github.stefanbirkner:fishbowl", version.ref = "test-fishbowl" }

deprecated-hamcrestCore = { module = "org.hamcrest:hamcrest-core" }
deprecated-hamcrestLibrary = { module = "org.hamcrest:hamcrest-library" }

[bundles]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
