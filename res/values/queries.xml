<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE resources>
<resources>
	<string name="query_properties"><![CDATA["
		select
			p._id,
			p.name,
			p.image,
			pt.image as typeImage,
			(select count(1) from Room where property = p._id) as childrenCount
		from Property p
		join PropertyType pt ON p.type = pt._id
		order by p.name
	"]]></string>
	<string name="query_property"><![CDATA["
		select p._id, p.name, p.type, p.image, pt.image as typeImage
		from Property p
		join PropertyType pt ON p.type = pt._id
		where p._id = ?
	"]]></string>
	<string name="query_property_new"><![CDATA["
		insert into Property(name, type, image) values(?, ?, ?)
	"]]></string>
	<string name="query_property_update"><![CDATA["
		update Property set name = ?, type = ?, image = ? where _id = ?
	"]]></string>
	<string name="query_property_delete"><![CDATA["
		delete from Property where _id = ?
	"]]></string>
	<string name="query_property_types"><![CDATA["
		select _id, name, image
		from PropertyType
		order by priority
	"]]></string>
	<string name="query_property_types_filtered"><![CDATA["
		select _id, name
		from PropertyType
		where name like ? escape '\'
		order by priority
	"]]></string>
	<string name="query_room_types"><![CDATA["
		select rt._id, rt.name, COALESCE(rt.image, rtk.image) as image
		from RoomType rt
		join RoomTypeKind rtk ON rt.kind = rtk._id
		order by rt.priority
	"]]></string>
	<string name="query_rooms"><![CDATA["
		select
			r._id,
			r.root,
			r.name,
			r.image,
			COALESCE(rt.image, rtk.image) as typeImage,
			(select count(1) from Item where parent = r.root) as childrenCount
		from Room r
		join RoomType rt ON r.type = rt._id
		join RoomTypeKind rtk ON rt.kind = rtk._id
		order by r.name 
	"]]></string>
	<string name="query_rooms_by_property"><![CDATA["
		select
			r._id,
			r.root,
			r.name,
			r.image,
			COALESCE(rt.image, rtk.image) as typeImage,
			(select count(1) from Item where parent = r.root) as childrenCount
		from Room r
		join RoomType rt ON r.type = rt._id
		join RoomTypeKind rtk ON rt.kind = rtk._id
		where r.property = ?
		order by r.name 
	"]]></string>
	<string name="query_room"><![CDATA["
		select r._id, r.name, r.type, r.root, r.property, r.image, COALESCE(rt.image, rtk.image) as typeImage
		from Room r
		join RoomType rt ON r.type = rt._id
		join RoomTypeKind rtk ON rt.kind = rtk._id
		where r._id = ?
	"]]></string>
	<string name="query_room_new"><![CDATA["
		insert into Room_Rooter(property, name, type, image) values(?, ?, ?, ?)
	"]]></string>
	<string name="query_room_update"><![CDATA["
		update Room set name = ?, type = ?, image = ? where _id = ?
	"]]></string>
	<string name="query_room_delete"><![CDATA["
		delete from Room where _id = ?
	"]]></string>
	<string name="query_item_categories"><![CDATA["
		select
			c._id,
			c.name,
			c.parent,
			cd.level,
			c.image
		from Category_Descendant cd
		join Category c ON cd.descendant = c._id and c._id >= 0
		where cd.category = ?
	"]]></string>
	<string name="query_items"><![CDATA["
		select
			i._id,
			i.name,
			i.image,
			c.image as typeImage,
			(select count(1) from Item where parent = i._id) as childrenCount,
			c.name as category
		from Item     i
		join Category c ON i.category = c._id
		where i.parent = ?
		order by i.name 
	"]]></string>
	<string name="query_items_in_room"><![CDATA["
		select
			i._id,
			i.name,
			i.image,
			c.image as typeImage,
			(select count(1) from Item where parent = i._id) as childrenCount,
			c.name as category
		from Room     r
		join Item     i ON r.root = i.parent
		join Category c ON i.category = c._id
		where r._id = ?
		order by i.name 
	"]]></string>
	<string name="query_items_by_category"><![CDATA["
		select
			i._id,
			i.name,
			i.image,
			c.image as typeImage,
			(select count(1) from Item where parent = i._id) as childrenCount,
			c.name as category
		from Item     i
		join Category c ON i.category = c._id
		where i.category = ?
		order by i.name 
	"]]></string>
	<string name="query_items_in_category"><![CDATA["
		select
			i._id,
			i.name,
			i.image,
			c.image as typeImage,
			(select count(1) from Item where parent = i._id) as childrenCount,
			c.name as category
		from Item     i
		join Category_Descendant cd ON i.category = cd.descendant
		join Category c ON cd.descendant = c._id and c._id <> -1
		where cd.category = ?
		order by i.name 
	"]]></string>
	<string name="query_item"><![CDATA["
		select i._id, i.name, i.category, i.image, c.image as typeImage
		from Item i
		join Category c ON i.category = c._id
		where i._id = ?
	"]]></string>
	<string name="query_categories"><![CDATA["
		select
			c._id,
			c.name,
			c.image,
			(select count(1) from Category where parent = c._id) as childrenCount,
			(select count(1) from Item where category in (select descendant from Category_Descendant where category = c._id)) as countItems
		from Category c
		left join Category_Name_Cache cnc ON cnc.key = c.name
		where c.parent = ?
		order by (CASE WHEN c.name <> 'category_uncategorized' THEN ifNULL(cnc.value, c.name) ELSE CAST(X'FFFD' AS TEXT) END)
	"]]></string>
	<string name="query_category"><![CDATA["
		select c._id, c.name, c.image
		from Category c
		where c._id = ?
	"]]></string>
	<string name="query_category_cache_names"><![CDATA["
		select key from Category_Name_Cache
	"]]></string>
	<string name="query_category_cache_update"><![CDATA["
		update Category_Name_Cache set value = ? where key = ?
	"]]></string>
	<string name="query_item_new"><![CDATA["
		insert into Item(parent, name, category, image) values(?, ?, ?, ?)
	"]]></string>
	<string name="query_item_update"><![CDATA["
		update Item set name = ?, category = ?, image = ? where _id = ?
	"]]></string>
	<string name="query_item_delete"><![CDATA["
		delete from Item where _id = ?
	"]]></string>
	<string name="query_search"><![CDATA["
		select
			rowid    as _id,
			name     as suggest_text_1,
			location as suggest_text_2
		from Search
		where name MATCH ?
		order by name
	"]]></string>
</resources>
