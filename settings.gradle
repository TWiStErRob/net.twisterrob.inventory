import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
	includeBuild("gradle/plugins-inventory")
	repositories {
		google()
		mavenCentral()
		exclusiveContent {
			forRepository {
				gradlePluginPortal()
			}
			filter {
				includeModule("com.gradle.enterprise", "com.gradle.enterprise.gradle.plugin")
				includeModule("com.gradle", "gradle-enterprise-gradle-plugin")
			}
		}
	}
}

plugins {
	id("net.twisterrob.gradle.plugin.settings") version "0.16"
	id("com.gradle.enterprise") version("3.14.1")
}

dependencyResolutionManagement {
	includeBuild("gradle/platform")
	repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
	repositories {
		google()
		mavenCentral()
		maven { // jcenter() deprecated
			name = "jcenter"
			url = uri("https://jcenter.bintray.com/")
			content {
				// Can't update flexbox yet to its 3.x version, because it ships with Java 9 bytecode.
				includeModule("com.google.android", "flexbox")
			}
		}
	}
}

rootProject.name = 'Inventory'

include(":android")
include(":android:base")
include(":android:test_helpers")
includeWithContract(":android:database")
include(":android:database:test_helpers")
include(":android:preferences")
include(":android:data")
include(":android:data:svg")
include(":android:backup")
include(":android:space")
include(":tools:transform")

void includeWithContract(String projectPath) {
	include(projectPath)
	def contractProjectPath = "${projectPath}-contract"
	include(contractProjectPath)
	project(contractProjectPath).projectDir = new File(project(projectPath).projectDir, "contract")
}

includeBuild("libs") { build ->
	apply from: new File(build.projectDir, "gradle/settings.substitutions.gradle"), to: build
}

gradleEnterprise {
	buildScan {
		termsOfServiceUrl = "https://gradle.com/terms-of-service"
		termsOfServiceAgree = "yes"
	}
}
